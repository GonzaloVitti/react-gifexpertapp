{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cats","id","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,sBAAMC,SATY,SAACC,GACjBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAO,IACrBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAaO,OAC/BN,EAAS,MAKb,SACE,uBACEO,GAAG,WACHC,KAAK,OACLC,MAAOV,EACPW,SAAU,SAACR,GAAD,OAjBU,SAACA,GACvBF,EAASE,EAAES,OAAOF,OAgBCG,CAAkBV,S,+BCtB9BW,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLjB,GAAIiB,EAAIjB,GACRkB,MAAOD,EAAIC,MACXT,IAAKQ,EAAIE,OAAOC,iBAAiBX,QAVlB,kBAaZM,GAbY,4CAAH,sDCAPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACnC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAMC,IAAKd,EAAKe,IAAKN,IACrB,4BAAIA,QCDGO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACxB,ECD0B,SAACA,GAC3B,MAA0BhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDd2BK,CAAazB,GAAjCY,EAAd,EAAQL,KAAcY,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDf,IAClDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEPnBiC,EAAe,WAC1B,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEE4C,EAAWlB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCZd4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ea2ef289.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n      setInput(e.target.value);\r\n  };\r\n  const handleSubmit =(e)=>{\r\n      e.preventDefault();\r\n      if(input.trim().length>2){\r\n        setCategories(cats =>[input,...cats]);\r\n        setInput('');\r\n      }\r\n      \r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        id=\"category\"\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => handleInputChange(e)}\r\n      />\r\n\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=bANdEWQszTm43VnEdIcqeqEhMzau6J8x`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n};","export const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img  src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","//rafcp SNIPPET QUE ARMA SOLO EL COMPONENTE\r\nimport { useState } from 'react';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"CS GO\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n      <ol>\r\n        {\r\n        categories.map(category =>\r\n         <GifGrid \r\n         key={category} \r\n         category = {category}/>\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}